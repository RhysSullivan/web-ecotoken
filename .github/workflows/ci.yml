name: CI

on: [workflow_call]

# You can leverage Vercel Remote Caching with Turbo to speed up your builds
# @link https://turborepo.org/docs/core-concepts/remote-caching#remote-caching-on-vercel-builds
env:
    TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    SKIP_ENV_VALIDATION: true

jobs:
    lint:
        name: Run ESLint
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Setup pnpm
              uses: pnpm/action-setup@v2.2.4

            - name: Setup Node 18
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Get pnpm store directory
              id: pnpm-cache
              run: |
                  echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies (with cache)
              run: pnpm install --ignore-scripts

            - name: Check workspaces
              run: pnpm manypkg check

            - name: Generate Prisma Client
              run: pnpm db:generate

            - run: pnpm lint
              env:
                  SKIP_ENV_VALIDATION: true

    prettier:
        name: Run Prettier
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Setup pnpm
              uses: pnpm/action-setup@v2.2.4

            - name: Setup Node 18
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Get pnpm store directory
              id: pnpm-cache
              run: |
                  echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies (with cache)
              run: pnpm install --ignore-scripts

            - run: pnpm format:check

    typecheck:
        name: Run Typechecker
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3

            - name: Setup pnpm
              uses: pnpm/action-setup@v2.2.4

            - name: Setup Node 18
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Get pnpm store directory
              id: pnpm-cache
              run: |
                  echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies (with cache)
              run: pnpm install --ignore-scripts

            - name: Generate Prisma Client
              run: pnpm db:generate

            - run: pnpm type-check

    # build:
    #     name: Build
    #     timeout-minutes: 15
    #     runs-on: ubuntu-latest

    #     # To use Turborepo Remote Caching, set the following environment variables for the job.
    #     env:
    #         TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #         TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    #     steps:
    #         - name: Checkout repo
    #           uses: actions/checkout@v3

    #         - name: Setup pnpm
    #           uses: pnpm/action-setup@v2.2.4

    #         - name: Setup Node 18
    #           uses: actions/setup-node@v3
    #           with:
    #               node-version: 18

    #         - name: Get pnpm store directory
    #           id: pnpm-cache
    #           run: |
    #               echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

    #         - name: Setup pnpm cache
    #           uses: actions/cache@v3
    #           with:
    #               path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
    #               key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
    #               restore-keys: |
    #                   ${{ runner.os }}-pnpm-store-

    #         - name: Install dependencies (with cache)
    #           run: pnpm install --ignore-scripts

    #         - name: Generate Prisma Client
    #           run: pnpm db:generate

    #         - run: pnpm build
    #           env:
    #               SKIP_ENV_VALIDATION: true
